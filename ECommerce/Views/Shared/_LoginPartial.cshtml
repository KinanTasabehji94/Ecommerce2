@using Microsoft.AspNetCore.Identity
@using Ecommerce.Models
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm" class="navbar-left">
        <ul class="nav navbar-nav navbar-left">
            <li id="Search">
                @using (Html.BeginForm("Search", "Home", FormMethod.Post))
                {
                    <input type="text" name="searchName" id="SearchName" placeholder="ابحث عن (مزود خدمة/ خدمة)">
                    <i class="glyphicon glyphicon-search"></i>

                }
            </li>
            @if ((await AuthorizationService.AuthorizeAsync(User, "ManageClaims")).Succeeded)
            {
                <li><a asp-area="Identity" asp-page="/Account/RegisterAdmin">اضافة موظف</a></li>
            }
            @if ((await AuthorizationService.AuthorizeAsync(User, "ManageSproviders")).Succeeded)
            {
                <li><a asp-area="Identity" asp-page="/Account/Registersprovider">اضافة مقدم خدمة</a></li>
            }
            <li>
                <button type="submit" class="btn btn-link navbar-btn navbar-link">تسجيل خروج</button>
            </li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-left">
        <li id="Search">
            @using (Html.BeginForm("Search", "Home", FormMethod.Post))
            {
                <input type="text" name="searchName" id="SearchName" placeholder="ابحث عن (مزود خدمة/ خدمة)">
                <i class="glyphicon glyphicon-search"></i>

            }
        </li>
        <li><a asp-area="Identity" asp-page="/Account/Register">إنشاء حساب</a></li>
        <li><a asp-area="Identity" asp-page="/Account/Login">تسجيل دخول</a></li>
    </ul>
}